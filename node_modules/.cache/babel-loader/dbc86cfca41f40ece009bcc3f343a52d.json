{"ast":null,"code":"import { backendLookup } from '../lookup';\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/Baseball/create/\", callback, {\n    content: newTweet\n  });\n}\nexport function apiCommentCreate(newComment, callback) {\n  backendLookup(\"POST\", \"/Baseball/commentcreate/\", callback, {\n    content: newComment\n  });\n}\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = {\n    id: tweetId,\n    action: action\n  };\n  backendLookup(\"POST\", \"/Baseball/action/\", callback, data);\n}\nexport function apiCommentAction(commentId, action, callback) {\n  const data = {\n    id: commentId,\n    action: action\n  };\n  backendLookup(\"POST\", \"/Baseball/commentaction/\", callback, data);\n}\nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/Baseball/${tweetId}/`, callback);\n}\nexport function apiCommentDetail(commentId, callback) {\n  backendLookup(\"GET\", `/Baseball/${commentId}/`, callback);\n}\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/Baseball/feed/\";\n\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n\n  backendLookup(\"GET\", endpoint, callback);\n}\nexport function apiCommentFeed(callback, nextUrl) {\n  let endpoint = \"/Baseball/commentfeed/\";\n\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n\n  backendLookup(\"GET\", endpoint, callback);\n}\nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/Baseball/\";\n\n  if (username) {\n    endpoint = `/Baseball/?username=${username}`;\n  }\n\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n\n  backendLookup(\"GET\", endpoint, callback);\n}","map":{"version":3,"sources":["C:/Users/Jacky/Tweetme/Tweetme-2/tweetme2-web/src/Baseball/lookup.js"],"names":["backendLookup","apiTweetCreate","newTweet","callback","content","apiCommentCreate","newComment","apiTweetAction","tweetId","action","data","id","apiCommentAction","commentId","apiTweetDetail","apiCommentDetail","apiTweetFeed","nextUrl","endpoint","undefined","replace","apiCommentFeed","apiTweetList","username"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,WAA5B;AAEA,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA2C;AAC9CH,EAAAA,aAAa,CAAC,MAAD,EAAS,mBAAT,EAA8BG,QAA9B,EAAwC;AAACC,IAAAA,OAAO,EAAEF;AAAV,GAAxC,CAAb;AACD;AAEH,OAAO,SAASG,gBAAT,CAA0BC,UAA1B,EAAsCH,QAAtC,EAA+C;AAClDH,EAAAA,aAAa,CAAC,MAAD,EAAS,0BAAT,EAAqCG,QAArC,EAA+C;AAACC,IAAAA,OAAO,EAAEE;AAAV,GAA/C,CAAb;AACD;AAEH,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCN,QAAzC,EAAkD;AACrD,QAAMO,IAAI,GAAG;AAACC,IAAAA,EAAE,EAAEH,OAAL;AAAcC,IAAAA,MAAM,EAAEA;AAAtB,GAAb;AACAT,EAAAA,aAAa,CAAC,MAAD,EAAS,mBAAT,EAA8BG,QAA9B,EAAwCO,IAAxC,CAAb;AACH;AAGD,OAAO,SAASE,gBAAT,CAA0BC,SAA1B,EAAqCJ,MAArC,EAA6CN,QAA7C,EAAsD;AACzD,QAAMO,IAAI,GAAG;AAACC,IAAAA,EAAE,EAAEE,SAAL;AAAgBJ,IAAAA,MAAM,EAAEA;AAAxB,GAAb;AACAT,EAAAA,aAAa,CAAC,MAAD,EAAS,0BAAT,EAAqCG,QAArC,EAA+CO,IAA/C,CAAb;AACH;AAED,OAAO,SAASI,cAAT,CAAwBN,OAAxB,EAAiCL,QAAjC,EAA2C;AAC9CH,EAAAA,aAAa,CAAC,KAAD,EAAS,aAAYQ,OAAQ,GAA7B,EAAiCL,QAAjC,CAAb;AACH;AAED,OAAO,SAASY,gBAAT,CAA0BF,SAA1B,EAAqCV,QAArC,EAA+C;AAClDH,EAAAA,aAAa,CAAC,KAAD,EAAS,aAAYa,SAAU,GAA/B,EAAmCV,QAAnC,CAAb;AACH;AAED,OAAO,SAASa,YAAT,CAAsBb,QAAtB,EAAgCc,OAAhC,EAAyC;AAC5C,MAAIC,QAAQ,GAAI,iBAAhB;;AACA,MAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKE,SAApC,EAA+C;AAC3CD,IAAAA,QAAQ,GAAGD,OAAO,CAACG,OAAR,CAAgB,2BAAhB,EAA6C,EAA7C,CAAX;AACH;;AACDpB,EAAAA,aAAa,CAAC,KAAD,EAAQkB,QAAR,EAAkBf,QAAlB,CAAb;AACH;AAGD,OAAO,SAASkB,cAAT,CAAwBlB,QAAxB,EAAkCc,OAAlC,EAA2C;AAC9C,MAAIC,QAAQ,GAAI,wBAAhB;;AACA,MAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKE,SAApC,EAA+C;AAC3CD,IAAAA,QAAQ,GAAGD,OAAO,CAACG,OAAR,CAAgB,2BAAhB,EAA6C,EAA7C,CAAX;AACH;;AACDpB,EAAAA,aAAa,CAAC,KAAD,EAAQkB,QAAR,EAAkBf,QAAlB,CAAb;AACH;AAED,OAAO,SAASmB,YAAT,CAAsBC,QAAtB,EAAgCpB,QAAhC,EAA0Cc,OAA1C,EAAmD;AACtD,MAAIC,QAAQ,GAAI,YAAhB;;AACA,MAAIK,QAAJ,EAAa;AACTL,IAAAA,QAAQ,GAAK,uBAAsBK,QAAS,EAA5C;AACH;;AACD,MAAIN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKE,SAApC,EAA+C;AAC3CD,IAAAA,QAAQ,GAAGD,OAAO,CAACG,OAAR,CAAgB,2BAAhB,EAA6C,EAA7C,CAAX;AACH;;AACDpB,EAAAA,aAAa,CAAC,KAAD,EAAQkB,QAAR,EAAkBf,QAAlB,CAAb;AACH","sourcesContent":["import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/Baseball/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiCommentCreate(newComment, callback){\r\n    backendLookup(\"POST\", \"/Baseball/commentcreate/\", callback, {content: newComment})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/Baseball/action/\", callback, data)\r\n}\r\n\r\n\r\nexport function apiCommentAction(commentId, action, callback){\r\n    const data = {id: commentId, action: action}\r\n    backendLookup(\"POST\", \"/Baseball/commentaction/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/Baseball/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiCommentDetail(commentId, callback) {\r\n    backendLookup(\"GET\", `/Baseball/${commentId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/Baseball/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n\r\nexport function apiCommentFeed(callback, nextUrl) {\r\n    let endpoint =  \"/Baseball/commentfeed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint =  \"/Baseball/\"\r\n    if (username){\r\n        endpoint =  `/Baseball/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}"]},"metadata":{},"sourceType":"module"}