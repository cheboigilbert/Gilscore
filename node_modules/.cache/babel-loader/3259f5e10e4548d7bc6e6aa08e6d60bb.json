{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacky\\\\Tweetme\\\\Tweetme-2\\\\tweetme2-web\\\\src\\\\tweets\\\\commentcreate.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from \"axios\";\nimport { apiCommentCreate } from './lookup';\nexport function CommentCreate(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [uploadFile, setUploadFile] = React.useState();\n  const {\n    didComment\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didComment(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //const newVal = textAreaRef.current.value\n\n    const dataArray = new FormData();\n    dataArray.append(\"uploadFile\", uploadFile); // backend api request\n\n    axios.post(\"http://localhost:8000/api/tweets/commentcreate/\", dataArray, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {// successfully uploaded response\n    }).catch(error => {// error response\n    });\n    apiCommentCreate(dataArray, handleBackendUpdate); //textAreaRef.current.value = ''\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: e => setUploadFile(e.target.files[0]),\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Comment\")));\n}\n\n_s(CommentCreate, \"/Cv5FfnpOobel0G9K4JQRqi3MXg=\");\n\n_c = CommentCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCreate\");","map":{"version":3,"sources":["C:/Users/Jacky/Tweetme/Tweetme-2/tweetme2-web/src/tweets/commentcreate.js"],"names":["React","axios","apiCommentCreate","CommentCreate","props","textAreaRef","createRef","uploadFile","setUploadFile","useState","didComment","handleBackendUpdate","response","status","console","log","alert","handleSubmit","event","preventDefault","dataArray","FormData","append","post","headers","then","catch","error","className","e","target","files"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,UAA/B;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAClC,QAAMC,WAAW,gBAAGL,KAAK,CAACM,SAAN,EAApB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,KAAK,CAACS,QAAN,EAApC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeN,KAArB;;AACE,QAAMO,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAqB;AAC/C,QAAIA,MAAM,KAAK,GAAf,EAAmB;AACjBH,MAAAA,UAAU,CAACE,QAAD,CAAV;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAE9B;;AACA,UAAMC,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+Bf,UAA/B,EAJ8B,CAK9B;;AACAN,IAAAA,KAAK,CACJsB,IADD,CACM,iDADN,EACyDH,SADzD,EACoE;AAClEI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADyD,KADpE,EAMCC,IAND,CAMOb,QAAD,IAAc,CAClB;AACD,KARD,EASCc,KATD,CASQC,KAAD,IAAW,CAChB;AACD,KAXD;AAYAzB,IAAAA,gBAAgB,CAAEkB,SAAF,EAAaT,mBAAb,CAAhB,CAlB8B,CAmB9B;AACD,GApBD;;AAqBA,sBAAO;AAAK,IAAA,SAAS,EAAEP,KAAK,CAACwB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAU,IAAA,GAAG,EAAEZ,WAAf;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAqE,IAAA,IAAI,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGwB,CAAD,IAAOrB,aAAa,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAjD;AAAsE,IAAA,QAAQ,EAAE,IAAhF;AAAsF,IAAA,SAAS,EAAC,cAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADC,CAAP;AASH;;GA3Ce5B,a;;KAAAA,a","sourcesContent":["import React from 'react'\r\nimport axios from \"axios\";\r\nimport {apiCommentCreate} from './lookup'\r\n\r\n\r\nexport function CommentCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const [uploadFile, setUploadFile] = React.useState();\r\n  const {didComment} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didComment(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      //const newVal = textAreaRef.current.value\r\n      const dataArray = new FormData();\r\n      dataArray.append(\"uploadFile\", uploadFile);\r\n      // backend api request\r\n      axios\r\n      .post(\"http://localhost:8000/api/tweets/commentcreate/\", dataArray, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // successfully uploaded response\r\n      })\r\n      .catch((error) => {\r\n        // error response\r\n      });\r\n      apiCommentCreate( dataArray, handleBackendUpdate)\r\n      //textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='comment'>\r\n\r\n            </textarea>\r\n            <input type=\"file\" onChange={(e) => setUploadFile(e.target.files[0])} required={true} className='form-control' />\r\n            <button type='submit' className='btn btn-primary my-3'>Comment</button>\r\n        </form>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}