{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacky\\\\Tweetme\\\\Tweetme-2\\\\tweetme2-web\\\\src\\\\tweets\\\\commentcreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { apiCommentCreate } from './lookup';\nexport function CommentCreate(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [Image, setImage] = useState();\n  const {\n    didComment\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didComment(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let form_data = new FormData();\n    form_data.append('Image', Image);\n    const url = apiCommentCreate();\n    axios.post(url, form_data, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiCommentCreate(newVal, handleBackendUpdate);\n    apiCommentCreate(form_data, handleBackendUpdate); // textAreaRef.current.value = ''\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Upload file:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    accept: \"image/png, image/jpeg\",\n    onChange: handleImageChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Comment\")));\n}\n\n_s(CommentCreate, \"OUU18PEC9b1PIrZJezL+X+SFBIw=\");\n\n_c = CommentCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCreate\");","map":{"version":3,"sources":["C:/Users/Jacky/Tweetme/Tweetme-2/tweetme2-web/src/tweets/commentcreate.js"],"names":["React","useState","axios","apiCommentCreate","CommentCreate","props","textAreaRef","createRef","Image","setImage","didComment","handleBackendUpdate","response","status","console","log","alert","handleImageChange","event","target","files","handleSubmit","preventDefault","form_data","FormData","append","url","post","headers","then","res","data","catch","err","newVal","current","value","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,gBAAR,QAA+B,UAA/B;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAClC,QAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,EAAjC;AAEA,QAAM;AAACS,IAAAA;AAAD,MAAeL,KAArB;;AACE,QAAMM,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAqB;AAC/C,QAAIA,MAAM,KAAK,GAAf,EAAmB;AACjBH,MAAAA,UAAU,CAACE,QAAD,CAAV;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,iBAAiB,GAAIC,KAAD,IAAU;AAClCT,IAAAA,QAAQ,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AAED,GAHD;;AAOA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAIC,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACCD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAAyBjB,KAAzB;AACA,UAAMkB,GAAG,GAAGvB,gBAAgB,EAA5B;AACAD,IAAAA,KAAK,CAACyB,IAAN,CAAWD,GAAX,EAAgBH,SAAhB,EAA2B;AAC5BK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADmB,KAA3B,EAKEC,IALF,CAKOC,GAAG,IAAI;AACXhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACC,IAAhB;AACD,KAPF,EAQEC,KARF,CAQQC,GAAG,IAAInB,OAAO,CAACC,GAAR,CAAYkB,GAAZ,CARf;AASD,UAAMC,MAAM,GAAG5B,WAAW,CAAC6B,OAAZ,CAAoBC,KAAnC,CAd8B,CAgB9B;;AACAjC,IAAAA,gBAAgB,CAAC+B,MAAD,EAAWvB,mBAAX,CAAhB;AACAR,IAAAA,gBAAgB,CAACoB,SAAD,EAAYZ,mBAAZ,CAAhB,CAlB8B,CAoB/B;AACA,GArBD;;AAsBA,sBAAO;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACgC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAU,IAAA,GAAG,EAAEf,WAAf;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAqE,IAAA,IAAI,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEF;AAAO,IAAA,IAAI,EAAC,MAAZ;AACS,IAAA,EAAE,EAAC,OADZ;AAES,IAAA,MAAM,EAAC,uBAFhB;AAEyC,IAAA,QAAQ,EAAEW,iBAFnD;AAEsE,IAAA,QAAQ,MAF9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,CALF,eAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF,CADC,CAAP;AAiBH;;GA5Deb,a;;KAAAA,a","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {apiCommentCreate} from './lookup'\r\n\r\n\r\nexport function CommentCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const [Image, setImage]= useState();\r\n\r\n  const {didComment} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didComment(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleImageChange = (event) =>{\r\n      setImage(event.target.files[0]);\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      let form_data = new FormData();\r\n       form_data.append('Image',Image);\r\n       const url = apiCommentCreate()\r\n       axios.post(url, form_data, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    })\r\n        .then(res => {\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => console.log(err))\r\n      const newVal = textAreaRef.current.value \r\n\r\n      // backend api request\r\n      apiCommentCreate(newVal,   handleBackendUpdate)\r\n      apiCommentCreate(form_data, handleBackendUpdate)\r\n    \r\n     // textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n           <textarea ref={textAreaRef} required={true} className='form-control' name='comment'>\r\n\r\n            </textarea>\r\n\r\n            <label>\r\n                  Upload file:\r\n          <input type=\"file\"\r\n                   id=\"image\"\r\n                   accept=\"image/png, image/jpeg\"  onChange={handleImageChange} required/>\r\n\r\n        </label>\r\n            <button type='submit' className='btn btn-primary my-3'>Comment</button>\r\n        </form>\r\n        \r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}