{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacky\\\\Tweetme\\\\Tweetme-2\\\\tweetme2-web\\\\src\\\\tweets\\\\commentcreate.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useRef } from 'react';\nimport { apiCommentCreate } from './lookup';\nexport function CommentCreate(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const {\n    didComment\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didComment(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const FileUploader = _ref => {\n    _s();\n\n    let {\n      onFileSelect\n    } = _ref;\n    const fileInput = useRef(null);\n\n    const handleFileInput = e => {\n      onFileSelect(e.target.files[0]);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-uploader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => fileInput.current && fileInput.current.click(),\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }));\n  };\n\n  _s(FileUploader, \"09+ds+3z18rIiMAYMZa/YbTXEjU=\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiCommentCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FileUploader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }\n  }, \"Comment\"))));\n}\n\n_s2(CommentCreate, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n\n_c = CommentCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCreate\");","map":{"version":3,"sources":["C:/Users/Jacky/Tweetme/Tweetme-2/tweetme2-web/src/tweets/commentcreate.js"],"names":["React","useState","useRef","apiCommentCreate","CommentCreate","props","textAreaRef","createRef","selectedFile","setSelectedFile","didComment","handleBackendUpdate","response","status","console","log","alert","FileUploader","onFileSelect","fileInput","handleFileInput","e","target","files","current","click","handleSubmit","event","preventDefault","newVal","value","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,UAA/B;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAAA;;AAClC,QAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAACS,IAAAA;AAAD,MAAeL,KAArB;;AACE,QAAMM,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAqB;AAC/C,QAAIA,MAAM,KAAK,GAAf,EAAmB;AACjBH,MAAAA,UAAU,CAACE,QAAD,CAAV;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,YAAY,GAAG,QAAoB;AAAA;;AAAA,QAAnB;AAACC,MAAAA;AAAD,KAAmB;AACvC,UAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAD,CAAxB;;AACA,UAAMkB,eAAe,GAAIC,CAAD,IAAO;AAC5BH,MAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAZ;AAEF,KAHD;;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,QAAQ,EAAEH,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,CAAC,IAAIF,SAAS,CAACK,OAAV,IAAqBL,SAAS,CAACK,OAAV,CAAkBC,KAAlB,EAA3C;AAAsE,MAAA,SAAS,EAAC,iBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAYD,GAnBD;;AAbgC,KAa1BR,YAb0B;;AAkChC,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGvB,WAAW,CAACkB,OAAZ,CAAoBM,KAAnC,CAF8B,CAG9B;;AACA3B,IAAAA,gBAAgB,CAAC0B,MAAD,EAASlB,mBAAT,CAAhB;AACAL,IAAAA,WAAW,CAACkB,OAAZ,CAAoBM,KAApB,GAA4B,EAA5B;AACD,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEzB,KAAK,CAAC0B,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAU,IAAA,GAAG,EAAEpB,WAAf;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAqE,IAAA,IAAI,EAAC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAE,YAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,CAPD,CADC,CAAP;AAWH;;IApDeF,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react'\r\nimport  {useRef} from 'react'\r\nimport {apiCommentCreate} from './lookup'\r\n\r\n\r\nexport function CommentCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const {didComment} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didComment(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const FileUploader = ({onFileSelect}) => {\r\n      const fileInput = useRef(null)\r\n      const handleFileInput = (e) => {\r\n         onFileSelect(e.target.files[0])\r\n\r\n      }\r\n\r\n      return (\r\n          <div className=\"file-uploader\">\r\n\r\n              <input type= \"file\" onChange={handleFileInput}/>\r\n              <button onClick={e => fileInput.current && fileInput.current.click()} className=\"btn btn-primary\"></button>\r\n\r\n        </div>\r\n\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiCommentCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='comment'>\r\n\r\n            </textarea>\r\n            < FileUploader\r\n    \r\n            />\r\n           <p> <button type='submit' className='btn btn-primary my-3'>Comment</button></p>\r\n        </form>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}